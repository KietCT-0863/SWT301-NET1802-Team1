name: CI Pipeline for Playwright Tests

on:
  push:
    branches:
      - CreatePost1Test
  pull_request:
    branches:
      - CreatePost1Test
  workflow_dispatch:

env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: ${{ github.workspace }}/DemoPlaywright/DemoPlaywright/DemoPlaywright.csproj
  WORKING_DIRECTORY_PATH: ${{ github.workspace }}/DemoPlaywright/DemoPlaywright

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Debug output directory
      run: ls -R bin/Release/net8.0/
      working-directory: ${{ env.WORKING_DIRECTORY_PATH }}

    - name: Install Playwright CLI
      run: dotnet tool install --global Microsoft.Playwright.CLI

    - name: Install Playwright browsers and dependencies
      run: playwright install --with-deps
      working-directory: ${{ env.WORKING_DIRECTORY_PATH }}

    - name: Clean
      run: dotnet clean "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }}

    - name: Test CreatePostTest
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --filter "FullyQualifiedName~DemoPlaywright.CreatePostTest"
      continue-on-error: true

    - name: Test CreateReminders
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --filter "FullyQualifiedName~DemoPlaywright.CreateReminders"
      continue-on-error: true

    - name: Test TestLogin
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --filter "FullyQualifiedName~DemoPlaywright.TestLogin"
      continue-on-error: true

    - name: Test TestRegister
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --filter "FullyQualifiedName~DemoPlaywright.TestRegister"
      continue-on-error: true

    - name: Publish test results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: "**/TestResults/*.trx"